version: "3.7"

services:
  backend:
    volumes:
      - ./webapp:/usr/src/app
      - ./venv/src/melampus:/usr/local/lib/python3.8/site-packages/melampus
      - /data/imagine-data:/imagine-data
    ports:
      - 5000:5000
      - 5678:5678
    environment:
      - DEBUGGER_IP=${DEBUGGER_IP}
      - DEBUGGER_PORT=${DEBUGGER_PORT}
      - GEVENT_SUPPORT=True
      - AUTHLIB_INSECURE_TRANSPORT=1
      - KHEOPS_ALBUM_TOKEN=${KHEOPS_ALBUM_TOKEN}
      - KHEOPS_ANNOTATOR_USER_ID=${KHEOPS_ANNOTATOR_USER_ID}
      - KHEOPS_OUTCOME_USER_ID=${KHEOPS_OUTCOME_USER_ID}
      - DB_AUTOMIGRATE=1
    extra_hosts:
      - host.docker.internal:host-gateway
      - keycloak:host-gateway

  celery_extraction:
    volumes:
      - ./workers:/usr/src/app
      - ./venv/src/okapy:/usr/local/lib/python3.8/site-packages/okapy
      - /data/imagine-data:/imagine-data
    environment:
      - DEBUGGER_IP=${DEBUGGER_IP}
      - DEBUGGER_PORT_CELERY=${DEBUGGER_PORT_CELERY_EXTRACTION}
      - PYTHON_ENV=nodebug
    extra_hosts:
      - host.docker.internal:host-gateway
      - keycloak:host-gateway
    #command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=solo", "--hostname=extraction@%h", "--queues=extraction"]

  celery_training:
    volumes:
      - ./workers:/usr/src/app
      - ./venv/src/okapy:/usr/local/lib/python3.8/site-packages/okapy
      - /data/imagine-data:/imagine-data
    environment:
      - DEBUGGER_IP=${DEBUGGER_IP}
      - DEBUGGER_PORT_CELERY=${DEBUGGER_PORT_CELERY_TRAINING}
      - PYTHON_ENV=nodebug
    extra_hosts:
      - host.docker.internal:host-gateway
      - keycloak:host-gateway
    #command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=solo", "--hostname=training@%h", "--queues=training"]

  flower:
    ports:
      - 3333:3333

  db:
    ports:
      - 3307:3306

  phpmyadmin:
    ports:
      - 8888:80

  keycloak:
    ports:
      - 8081:8080

  keycloak-db:
    ports:
      - 6543:5432

  keycloak-db-admin:
    ports:
      - 8889:80

  ohif:
    ports:
      - 4567:80

  redis:
    ports:
      - 6379:6379

  redis-socket:
    ports:
      - 6380:6379
