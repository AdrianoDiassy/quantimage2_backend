version: '3.7'

services:
  backend:
    build: webapp
    env_file:
      - env_files/common.env
      - env_files/webapp.env
    secrets:
      - db-user-password
      - keycloak-client-secret
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common

  celery_extraction:
    build:
      context: .
      dockerfile: ./workers/Dockerfile
      # SSH mappings to allow cloning private Okapy & ZRad repos
      ssh:
        - okapy=$HOME/.ssh/id_rsa_okapy
        - zrad=$HOME/.ssh/id_rsa_zrad
    image: imagine_backend_celery
    env_file:
      - env_files/common.env
      - env_files/workers.env
      - env_files/workers-extraction.env
    secrets:
      - db-user-password
      - keycloak-client-secret
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common
    command: [ "celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=extraction@%h", "--queues=extraction" ]

  celery_training:
    image: imagine_backend_celery
    env_file:
      - env_files/common.env
      - env_files/workers.env
      - env_files/workers-training.env
    secrets:
      - db-user-password
      - keycloak-client-secret
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common
    command: [ "celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=training@%h", "--queues=training" ]


  flower:
    build: ./flower
    env_file:
      - env_files/common.env

  db:
    image: mysql:5.7
    env_file:
      - env_files/common.env
    secrets:
      - db-root-password
      - db-user-password
    volumes:
      - backend-db:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file:
      - env_files/phpmyadmin.env
    volumes:
      - /sessions
    depends_on:
      - db

  redis:
    image: redis
    command: [ "redis-server", "--appendonly", "yes" ]
    volumes:
      - tasks-db:/data

  redis-socket:
    image: redis

  keycloak:
    image: jboss/keycloak:16.1.1
    env_file:
      - env_files/common.env
      - env_files/keycloak.env
    environment:
      DB_ADDR: keycloak-db
    secrets:
      - keycloak-db-user-password
      - keycloak-admin-password
    volumes:
      - ./keycloak/imagine_theme:/opt/jboss/keycloak/themes/imagine
      - ./keycloak/exports:/tmp/export
    depends_on:
      - keycloak-db
    command: [ "-b", "0.0.0.0","-Dkeycloak.profile=preview" ]

  keycloak-db:
    image: postgres
    env_file:
      - env_files/keycloak.env
    secrets:
      - keycloak-db-user-password
    volumes:
      - pgdata:/var/lib/postgresql/data

  ohif:
    image: ohif/viewer:latest
    volumes:
      - ./ohif/ohif-config.js:/usr/share/nginx/html/app-config.js

secrets:
  db-root-password:
    file: secrets/db_root_password
  db-user-password:
    file: secrets/db_user_password
  keycloak-client-secret:
    file: secrets/keycloak_client_secret
  keycloak-db-user-password:
    file: secrets/keycloak_db_user_password
  keycloak-admin-password:
    file: secrets/keycloak_admin_password

volumes:
  backend-data:
  backend-db:
  tasks-db:
  pgdata:
