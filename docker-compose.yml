version: '3.7'

services:
  backend:
    build: webapp
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - GRID_SEARCH_CONCURRENCY=${GRID_SEARCH_CONCURRENCY}
      - CELERY_BROKER_URL=${CELERY_REDIS_URL}
      - CELERY_RESULT_BACKEND=${CELERY_REDIS_URL}
      - SOCKET_MESSAGE_QUEUE=${SOCKET_REDIS_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - KEYCLOAK_IMAGINE_FRONTEND_CLIENT_ID=${KEYCLOAK_IMAGINE_FRONTEND_CLIENT_ID}
      - KEYCLOAK_FRONTEND_ADMIN_ROLE=${KEYCLOAK_FRONTEND_ADMIN_ROLE}
      - KEYCLOAK_IMAGINE_CLIENT_ID=${KEYCLOAK_IMAGINE_CLIENT_ID}
      - KEYCLOAK_IMAGINE_CLIENT_SECRET=${KEYCLOAK_IMAGINE_CLIENT_SECRET}
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_BASE_URL=${KEYCLOAK_BASE_URL}
      - KHEOPS_BASE_URL=${KHEOPS_BASE_URL}
      - PYTHONUNBUFFERED=TRUE
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common

  celery_extraction:
    build:
      context: .
      dockerfile: ./workers/Dockerfile
      # SSH mappings to allow cloning private Okapy & ZRad repos
      ssh:
        - okapy=$HOME/.ssh/id_rsa_okapy
        - zrad=$HOME/.ssh/id_rsa_zrad
    image: imagine_backend_celery
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - CELERY_BROKER_URL=${CELERY_REDIS_URL}
      - CELERY_RESULT_BACKEND=${CELERY_REDIS_URL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY_EXTRACTION}
      - CELERY_CONFIG_MODULE=celeryconfig
      - SOCKET_MESSAGE_QUEUE=${SOCKET_REDIS_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - KHEOPS_BASE_URL=${KHEOPS_BASE_URL}
      - KEYCLOAK_BASE_URL=${KEYCLOAK_BASE_URL}
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_IMAGINE_CLIENT_ID=${KEYCLOAK_IMAGINE_CLIENT_ID}
      - KEYCLOAK_IMAGINE_CLIENT_SECRET=${KEYCLOAK_IMAGINE_CLIENT_SECRET}
      - PYTHONUNBUFFERED=TRUE
      - PYTHON_ENV=production
      - C_FORCE_ROOT=true
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common
    command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=extraction@%h", "--queues=extraction"]

  celery_training:
    image: imagine_backend_celery
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - CELERY_BROKER_URL=${CELERY_REDIS_URL}
      - CELERY_RESULT_BACKEND=${CELERY_REDIS_URL}
      - CELERY_WORKER_CONCURRENCY=${CELERY_WORKER_CONCURRENCY_TRAINING}
      - CELERY_CONFIG_MODULE=celeryconfig
      - SOCKET_MESSAGE_QUEUE=${SOCKET_REDIS_URL}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - KHEOPS_BASE_URL=${KHEOPS_BASE_URL}
      - KEYCLOAK_BASE_URL=${KEYCLOAK_BASE_URL}
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_IMAGINE_CLIENT_ID=${KEYCLOAK_IMAGINE_CLIENT_ID}
      - KEYCLOAK_IMAGINE_CLIENT_SECRET=${KEYCLOAK_IMAGINE_CLIENT_SECRET}
      - PYTHONUNBUFFERED=TRUE
      - PYTHON_ENV=production
      - C_FORCE_ROOT=true
    volumes:
      - backend-data:/imagine-data
      - ./shared/imaginebackend_common/:/usr/local/lib/python3.8/imaginebackend_common
    command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=training@%h", "--queues=training"]


  flower:
    build: ./flower
    command: ["flower", "--broker=${CELERY_REDIS_URL}", "--result-backend=${CELERY_REDIS_URL}", "--port=3333"]

  db:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - backend-db:/var/lib/mysql

  phpmyadmin:
    image:                 phpmyadmin/phpmyadmin
    environment:
      PMA_ARBITRARY:       1
      PMA_HOST:            db
      PMA_PORT:            3306
      UPLOAD_LIMIT:        100M
    volumes:
      - /sessions
    depends_on:
      - db

  redis:
    image: redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - tasks-db:/data

  redis-socket:
    image: redis

  keycloak:
    image: jboss/keycloak:16.1.1
    environment:
      - KEYCLOAK_REALM_NAME=${KEYCLOAK_REALM_NAME}
      - KEYCLOAK_USER=${KEYCLOAK_USER}
      - KEYCLOAK_PASSWORD=${KEYCLOAK_PASSWORD}
      - KEYCLOAK_LOGLEVEL=DEBUG
      - ROOT_LOGLEVEL=DEBUG
      - DB_VENDOR=POSTGRES
      - DB_ADDR=keycloak-db
      - DB_DATABASE=${KEYCLOAK_DB}
      - DB_USER=${KEYCLOAK_DB_USER}
      - DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - DB_SCHEMA=public
    volumes:
      - ./keycloak_theme:/opt/jboss/keycloak/themes/imagine
      - $KEYCLOAK_EXPORT_FOLDER:/tmp/export
    depends_on:
      - keycloak-db
    command: ["-b", "0.0.0.0","-Dkeycloak.profile=preview"]

  keycloak-db:
    image: postgres
    environment:
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - POSTGRES_DB=${KEYCLOAK_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  ohif:
    image: ohif/viewer:latest
    volumes:
      - ./ohif/ohif-config.js:/usr/share/nginx/html/app-config.js

volumes:
  backend-data:
  backend-db:
  tasks-db:
  pgdata:
